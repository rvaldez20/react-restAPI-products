[{"C:\\pnodejs\\restapi-frontend-react\\src\\index.js":"1","C:\\pnodejs\\restapi-frontend-react\\src\\App.js":"2","C:\\pnodejs\\restapi-frontend-react\\src\\reportWebVitals.js":"3","C:\\pnodejs\\restapi-frontend-react\\src\\components\\layout\\Header.js":"4","C:\\pnodejs\\restapi-frontend-react\\src\\components\\layout\\Navegacion.js":"5","C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\Clientes.js":"6","C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\Productos.js":"7","C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\Pedidos.js":"8","C:\\pnodejs\\restapi-frontend-react\\src\\config\\axios.js":"9","C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\Cliente.js":"10","C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\NuevoCliente.js":"11","C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\Producto.js":"12","C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\NuevoProducto.js":"13","C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\EditarProducto.js":"14","C:\\pnodejs\\restapi-frontend-react\\src\\components\\layout\\Spinner.js":"15","C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\NuevoPedido.js":"16","C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\EditarCliente.js":"17","C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\FormBuscarProducto.js":"18","C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\FormCantidadProducto.js":"19","C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\DetallesPedido.js":"20","C:\\pnodejs\\restapi-frontend-react\\src\\components\\auth\\Login.js":"21","C:\\pnodejs\\restapi-frontend-react\\src\\context\\CRMContext.js":"22"},{"size":503,"mtime":1609222581438,"results":"23","hashOfConfig":"24"},{"size":2083,"mtime":1613167325400,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":1093,"mtime":1613167325462,"results":"27","hashOfConfig":"24"},{"size":754,"mtime":1613167325465,"results":"28","hashOfConfig":"24"},{"size":2510,"mtime":1613180633760,"results":"29","hashOfConfig":"24"},{"size":2231,"mtime":1613181069696,"results":"30","hashOfConfig":"24"},{"size":1519,"mtime":1613177594626,"results":"31","hashOfConfig":"24"},{"size":137,"mtime":1609280857841,"results":"32","hashOfConfig":"24"},{"size":2156,"mtime":1613181216777,"results":"33","hashOfConfig":"24"},{"size":3685,"mtime":1613180402901,"results":"34","hashOfConfig":"24"},{"size":1945,"mtime":1613167325536,"results":"35","hashOfConfig":"24"},{"size":3300,"mtime":1613167325526,"results":"36","hashOfConfig":"24"},{"size":4388,"mtime":1613167325524,"results":"37","hashOfConfig":"24"},{"size":248,"mtime":1612561875491,"results":"38","hashOfConfig":"24"},{"size":7763,"mtime":1613167325490,"results":"39","hashOfConfig":"24"},{"size":4899,"mtime":1613180978064,"results":"40","hashOfConfig":"24"},{"size":752,"mtime":1613167325470,"results":"41","hashOfConfig":"24"},{"size":1226,"mtime":1613167325473,"results":"42","hashOfConfig":"24"},{"size":1304,"mtime":1613167325468,"results":"43","hashOfConfig":"24"},{"size":3024,"mtime":1613167325416,"results":"44","hashOfConfig":"24"},{"size":429,"mtime":1613167325574,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"ot1ouy",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\pnodejs\\restapi-frontend-react\\src\\index.js",[],["97","98"],"C:\\pnodejs\\restapi-frontend-react\\src\\App.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\reportWebVitals.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\layout\\Header.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\layout\\Navegacion.js",["99"],"// import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navegacion = () => {\r\n   return (      \r\n      <aside className=\"sidebar col-3\">\r\n         <h2>Administración </h2>\r\n\r\n         <nav className=\"navegacion\">\r\n            <Link to={\"/\"} className=\"clientes\">Clientes</Link>\r\n            <Link to={\"/productos\"} className=\"productos\">Productos</Link>\r\n            <Link to={\"/pedidos\"} className=\"pedidos\">Pedidos</Link>\r\n         </nav>\r\n      </aside>\r\n   );\r\n}\r\n \r\nexport default Navegacion;","C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\Clientes.js",["100","101","102"],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\Productos.js",["103","104","105"],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\Pedidos.js",["106","107"],"C:\\pnodejs\\restapi-frontend-react\\src\\config\\axios.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\Cliente.js",["108"],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\NuevoCliente.js",["109"],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\Producto.js",["110"],"import {Link} from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport clienteAxios from '../../config/axios'\r\n\r\nfunction Producto({producto}) {\r\n\r\n\t// para eliminar elproducto\r\n\tconst eliminarProducto = idProducto => {\r\n\t\tSwal.fire({\r\n\t\t\ttitle: '¿Estas seguro?',\r\n\t\t\ttext: \"Un producto Eliminado no se puede recuperar\",\r\n\t\t\ticon: 'warning',\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonColor: '#3085d6',\r\n\t\t\tcancelButtonColor: '#d33',\r\n\t\t\tconfirmButtonText: 'Si, Eliminar!',\r\n\t\t\tcancelButtonText: 'No, Cancelar'\r\n\t\t}).then((result) => {\r\n\t\tif (result.isConfirmed) {\r\n\t\t\t// hamos la peticion axios\r\n\t\t\tclienteAxios.delete(`/productos/${idProducto}`)\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tif(res.status === 200) {\r\n\t\t\t\t\t\tSwal.fire(\r\n\t\t\t\t\t\t\t'Eliminado',\r\n\t\t\t\t\t\t\tres.data.mensaje,\r\n\t\t\t\t\t\t\t'success'\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t// hacemos detrocturing al producto\r\n\tconst { _id, nombre, precio, imagen} = producto;\r\n\r\n   return (\r\n\t\t<li className=\"producto\">\r\n\t\t\t<div className=\"info-producto\">\r\n\t\t\t\t<p className=\"nombre\">{nombre}</p>\r\n\t\t\t\t<p className=\"precio\">$ {precio}</p>\r\n\t\t\t\t{ \timagen ? (\r\n\t\t\t\t\t\t<img className=\"imagen\" alt={`img_${nombre}`} src={`http://localhost:5000/${imagen}`} />\r\n\t\t\t\t\t) : null }\r\n\t\t\t</div>\r\n\t\t\t<div className=\"acciones\">\r\n\t\t\t\t<Link to={`/productos/editar/${_id}`} \r\n\t\t\t\t\t\tclassName=\"btn btn-azul\">\r\n\t\t\t\t\t\t<i className=\"fas fa-pen-alt\"></i>\r\n\t\t\t\t\t\tEditar Producto\r\n\t\t\t\t</Link>\r\n\r\n\t\t\t\t<button \ttype=\"button\" \r\n\t\t\t\t\t\t\tclassName=\"btn btn-rojo btn-eliminar\"\r\n\t\t\t\t\t\t\tonClick={ () => eliminarProducto(_id) }\r\n\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className=\"fas fa-times\"></i>\r\n\t\t\t\t\t\t\tEliminar Producto\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</li>\t \r\n\t)\r\n}\r\n\r\nexport default Producto;","C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\NuevoProducto.js",["111"],"import React, {Fragment, useState} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport clienteAxios from '../../config/axios';\r\n\r\n// para redireccionar\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\nfunction NuevoProducto(props) {\r\n\r\n\t/******************** STATES *******************/\r\n\r\n\t// state: producto=state | guardarProducto=setState\r\n\tconst [producto, guardarProducto] = useState({\r\n\t\tnombre: '',\r\n\t\tprecio: ''\r\n\t});\r\n\t\r\n\t// otro state: archivo=state | guardaraArchivo=setState\r\n\tconst [archivo, guardarArchivo] = useState('');\r\n\r\n\t/******************** METODOS *******************/\r\n\t// almacena un nuevo producto en la DB\r\n\tconst agregarProducto = async e => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\t// crear un formulario formdata\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('nombre', producto.nombre);\r\n\t\tformData.append('precio', producto.precio);\r\n\t\tformData.append('imagen', archivo);\r\n\r\n\t\t// almacenarlo en la DB\r\n\t\ttry {\r\n\t\t\tconst res = await clienteAxios.post('/productos', formData, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// para test de las respuesta (res)\r\n\t\t\t// console.log(res);\r\n\r\n\t\t\t// lanzar exito\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tSwal.fire(\t\t\t\t\r\n\t\t\t\t\t'Se Guardo Correctamente',\r\n\t\t\t\t\tres.data.mensaje,\r\n\t\t\t\t\t'success'\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// redireccionamos al listado de productos\r\n\t\t\tprops.history.push('/productos');\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\r\n\t\t\t// lanzar alerta de error\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttype: 'error',\r\n\t\t\t\ttitle: 'Hubo un Error',\r\n\t\t\t\ttext: 'Vuelva a intentarlo'\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t// leer los datos del formulario\r\n\tconst leerInformacionProducto = e => {\r\n\t\tguardarProducto({\r\n\t\t\t// obtener una copia del state actual y agregar de nuevo\r\n\t\t\t...producto,\r\n\t\t\t[e.target.name] : e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\t// Coloca la imagen en el state\r\n\tconst leerArchivo = e => {\r\n\t\t// para testear e.target.files - se selecciona el elemento [0] ya que es una imagen\r\n\t\t// console.log(e.target.files[0]);\r\n\r\n\t\tguardarArchivo(e.target.files[0]);\r\n\t}\r\n\r\n\t/******************** METODOS *******************/\r\n\r\n   return (\r\n\t\t<Fragment>\r\n\t\t\t<h2>Nuevo Producto</h2>\r\n\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={agregarProducto}\r\n\t\t\t>\r\n\t\t\t\t<legend>Llena todos los campos</legend>\r\n\r\n\t\t\t\t<div className=\"campo\">\r\n\t\t\t\t\t<label>Nombre:</label>\r\n\t\t\t\t\t<input \ttype=\"text\" \r\n\t\t\t\t\t\t\t\tplaceholder=\"Nombre Producto\" \r\n\t\t\t\t\t\t\t\tname=\"nombre\" \r\n\t\t\t\t\t\t\t\tonChange={leerInformacionProducto}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"campo\">\r\n\t\t\t\t\t<label>Precio:</label>\r\n\t\t\t\t\t<input \ttype=\"number\" \r\n\t\t\t\t\t\t\t\tname=\"precio\" \r\n\t\t\t\t\t\t\t\tmin=\"0.00\" \r\n\t\t\t\t\t\t\t\tstep=\"0.01\" \r\n\t\t\t\t\t\t\t\tplaceholder=\"Precio\"\r\n\t\t\t\t\t\t\t\tonChange={leerInformacionProducto}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"campo\">\r\n\t\t\t\t\t<label>Imagen:</label>\r\n\t\t\t\t\t<input \ttype=\"file\"  \r\n\t\t\t\t\t\t\t\tname=\"imagen\"\r\n\t\t\t\t\t\t\t\tonChange={leerArchivo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"enviar\">\r\n\t\t\t\t\t\t<input \ttype=\"submit\" \r\n\t\t\t\t\t\t\t\t\tclass=\"btn btn-azul\" \r\n\t\t\t\t\t\t\t\t\tvalue=\"Agregar Producto\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nexport default withRouter(NuevoProducto);","C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\EditarProducto.js",["112","113"],"import React, {Fragment, useState, useEffect} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport clienteAxios from '../../config/axios';\r\nimport Spinner from '../layout/Spinner';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\n\r\nfunction EditarProductos(props) {\r\n\r\n\t// Obtener el ID del producto usando los props (props.match.params)\r\n\tconst {id} = props.match.params;\r\n\t// console.log(id);\r\n\r\n\t/******************** STATES *******************/\r\n\t// producto=state | guardarProducto=setState\r\n\tconst [producto, guardarProducto] = useState({\r\n\t\tnombre: '',\r\n\t\tprecio: '',\r\n\t\timagen: ''\r\n\t});\r\n\r\n\t// otro state: archivo=state | guardaraArchivo=setState\r\n\tconst [archivo, guardarArchivo] = useState('');\r\n\r\n\r\n\t/******************** USEEFECTT *******************/\r\n\tuseEffect( () => {\r\n\t\t// consulta a la API para obtener el producto a editar\r\n\t\tconst consultarAPI = async () => {\r\n\t\t\tconst productoConsulta = await clienteAxios.get(`/productos/${id}`)\r\n\t\t\t// console.log(productoConsulta.data);\r\n\t\t\tguardarProducto(productoConsulta.data);\r\n\t\t}\r\n\r\n\t\t// ejecutamos la consulta a la API\r\n\t\tconsultarAPI();\r\n\t}, []);\r\n\r\n\r\n\t/******************** METODOS *******************/\r\n\t// leer los datos del formulario\r\n\tconst leerInformacionProducto = e => {\r\n\t\tguardarProducto({\r\n\t\t\t// obtener una copia del state actual y agregar de nuevo\r\n\t\t\t...producto,\r\n\t\t\t[e.target.name] : e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\t// Coloca la imagen en el state\r\n\tconst leerArchivo = e => {\r\n\t\t// para testear e.target.files - se selecciona el elemento [0] ya que es una imagen\r\n\t\t// console.log(e.target.files[0]);\r\n\r\n\t\tguardarArchivo(e.target.files[0]);\r\n\t}\r\n\r\n\t// edita un product en la DB\r\n\tconst editarProducto = async e => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\t// crear un formulario formdata\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('nombre', producto.nombre);\r\n\t\tformData.append('precio', producto.precio);\r\n\t\tformData.append('imagen', archivo);\r\n\r\n\t\t// almacenarlo en la DB\r\n\t\ttry {\r\n\t\t\tconst res = await clienteAxios.put(`/productos/${id}`, formData, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// para test de las respuesta (res)\r\n\t\t\t// console.log(res);\r\n\r\n\t\t\t// lanzar exito\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tSwal.fire(\t\t\t\t\r\n\t\t\t\t\t'Guardado!',\r\n\t\t\t\t\t'El Producto se actualizo Correctamente',\r\n\t\t\t\t\t'success'\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// redireccionamos al listado de productos\r\n\t\t\tprops.history.push('/productos');\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\r\n\t\t\t// lanzar alerta de error\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttype: 'error',\r\n\t\t\t\ttitle: 'Hubo un Error',\r\n\t\t\t\ttext: 'Vuelva a intentarlo'\r\n\t\t\t});\r\n\t\t}\t\t\r\n\r\n\t}\r\n\r\n\t// Extraer los valores del State\r\n\tconst { nombre, imagen, precio } = producto;\r\n\r\n\tif(!nombre) return <Spinner />\r\n\r\n   return (\r\n\t\t<Fragment>\r\n\t\t\t<h2>Editar Producto</h2>\r\n\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={editarProducto}\r\n\t\t\t>\r\n\t\t\t\t<legend>Llena todos los campos</legend>\r\n\r\n\t\t\t\t<div className=\"campo\">\r\n\t\t\t\t\t<label>Nombre:</label>\r\n\t\t\t\t\t<input \ttype=\"text\" \r\n\t\t\t\t\t\t\t\tplaceholder=\"Nombre Producto\" \r\n\t\t\t\t\t\t\t\tname=\"nombre\" \r\n\t\t\t\t\t\t\t\tonChange={leerInformacionProducto}\r\n\t\t\t\t\t\t\t\tdefaultValue={nombre}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"campo\">\r\n\t\t\t\t\t<label>Precio:</label>\r\n\t\t\t\t\t<input \ttype=\"number\" \r\n\t\t\t\t\t\t\t\tname=\"precio\" \r\n\t\t\t\t\t\t\t\tmin=\"0.00\" \r\n\t\t\t\t\t\t\t\tstep=\"0.01\" \r\n\t\t\t\t\t\t\t\tplaceholder=\"Precio\"\r\n\t\t\t\t\t\t\t\tonChange={leerInformacionProducto}\r\n\t\t\t\t\t\t\t\tdefaultValue={precio}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"campo\">\r\n\t\t\t\t\t<label>Imagen:</label>\r\n\t\t\t\t\t{imagen ? (\r\n\t\t\t\t\t\t<img width=\"200px\" alt={`img_${nombre}`} src={`http://localhost:5000/${imagen}`} />\r\n\t\t\t\t\t) : null }\r\n\t\t\t\t\t<input \ttype=\"file\"  \r\n\t\t\t\t\t\t\t\tname=\"imagen\"\r\n\t\t\t\t\t\t\t\tonChange={leerArchivo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"enviar\">\r\n\t\t\t\t\t\t<input \ttype=\"submit\" \r\n\t\t\t\t\t\t\t\t\tclass=\"btn btn-azul\" \r\n\t\t\t\t\t\t\t\t\tvalue=\"Guardar Cambios\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nexport default withRouter(EditarProductos);","C:\\pnodejs\\restapi-frontend-react\\src\\components\\layout\\Spinner.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\NuevoPedido.js",["114","115"],"import React, {Fragment, useState, useEffect} from 'react';\r\nimport clienteAxios from '../../config/axios';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport FormBuscarProducto from './FormBuscarProducto';\r\nimport FormCantidadProducto from './FormCantidadProducto';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction NuevoPedido(props){\r\n   // extraer el ID del cliente\r\n   const {id} = props.match.params;\r\n\r\n   /******************** USESTATE *******************/\r\n   // cliente = state | guardarCliente =stateEffect\r\n   const [cliente, guardarCliente] = useState({});\r\n\r\n   // busqueda = state | guardarBusqueda=stateEffect\r\n   const [busqueda, guardarBusqueda] = useState('');\r\n\r\n   // productos = state | guardarproductos = stateEffect\r\n   const [productos, guardarProductos] = useState([]);\r\n\r\n   // total = state | guardarTotal= stateeffect\r\n   const [total, guardarTotal] = useState(0);\r\n\r\n\r\n   /******************** USEEFFECT *******************/\r\n\r\n   useEffect( () => {\r\n      // obtenemos el cliente\r\n      const consultarAPI = async () => {\r\n         // consultar cliente actual\r\n         const resultado = await clienteAxios.get(`/clientes/${id}`);\r\n         // Tests\r\n         // console.log(resultado.data);         \r\n         // Se guarda el cliente en el state\r\n         guardarCliente(resultado.data);\r\n      }\r\n\r\n      // ejecutamos la consulta\r\n      consultarAPI();\r\n\r\n      // actualizar el total a pagar\r\n      actualizarTotal();\r\n\r\n   }, [productos]);\r\n\r\n\r\n   /******************** METODOS *******************/\r\n\r\n   const buscarProducto = async e => {\r\n      e.preventDefault();\r\n      \r\n      // obtener los productos e la busqueda\r\n      const resultadoBusqueda = await clienteAxios.post(`/productos/busqueda/${busqueda}`);\r\n      // para testear\r\n      //console.log(resultadoBusqueda);\r\n\r\n      // Validamos si obtuvimos un producto, si es asi lo agregamos al state\r\n      if(resultadoBusqueda.data[0]) {\r\n         // si hay un producto\r\n         let productoResultado = resultadoBusqueda.data[0];\r\n         // console.log(productoResultado);\r\n         //agregar la llave \"producto\" (copia id)\r\n         productoResultado.producto = resultadoBusqueda.data[0]._id;\r\n         productoResultado.cantidad = 0;\r\n\r\n         // guardamos el producto en el state (sacamos una copia del state actual)\r\n         guardarProductos([...productos, productoResultado]);         \r\n      } else {\r\n         // si no hay producto\r\n         Swal.fire({\r\n            type: 'error',\r\n            title: 'No Resultados',\r\n            text: 'No hay resultados'\r\n         });\r\n      }\r\n   }\r\n\r\n   // almacenar lo que tecleamos para busqueda en el state\r\n   const leerDatosBusqueda = e => {\r\n      guardarBusqueda( e.target.value );\r\n   }\r\n\r\n   // actualiza la cantidad de productos\r\n   // Disminuye en uno la cantidad\r\n   const restarProductos = i => {\r\n      // console.log('Uno Menos...',i);\r\n\r\n      // copiar el arreglo original del producto\r\n      const todosProductos = [...productos];\r\n\r\n      // validamos: si esta en cero no s epuede restar\r\n      if(todosProductos[i].cantidad === 0) return;\r\n\r\n      // si es mayor d ecero hace,os el decremento\r\n      todosProductos[i].cantidad--;\r\n      \r\n      // Y lo almacenamos en el state\r\n      guardarProductos(todosProductos);\r\n   }\r\n\r\n   // Aumenta en uno la cantidad\r\n   const aumentarProductos = i => {\r\n      // console.log('Uno mas...',i)\r\n\r\n      // copia al arreglo original de productos\r\n      const todosProductos = [...productos];\r\n\r\n      // incrementamos uno\r\n      todosProductos[i].cantidad++;\r\n\r\n      // Guardamos la cantidad en el state\r\n      guardarProductos(todosProductos);\r\n   }\r\n\r\n   // eliminar un producto del state\r\n   const eliminarProductoPedido = id => {\r\n      // console.log(id)      \r\n\r\n      // eliminamos el producto en base al ID\r\n      const todosProductos = productos.filter(producto => producto.producto !== id );\r\n\r\n      // lo guardamos en el state\r\n      guardarProductos(todosProductos);\r\n   }\r\n\r\n\r\n   // actualizar el total a pagar\r\n   const actualizarTotal = () => {\r\n      // si el arreglo de productos es igual a cero el total es cero\r\n      if (productos.length === 0) {\r\n         guardarTotal(0);\r\n         return;\r\n      } \r\n\r\n      // calculamos el nuevo total\r\n      let nuevoTotal = 0;\r\n      \r\n      \r\n      // recorrer todos los productos, sus cantidades y precios\r\n      productos.map( producto => nuevoTotal += (producto.cantidad * producto.precio) );\r\n\r\n      // almacenar el total en el state\r\n      guardarTotal(nuevoTotal);\r\n   }\r\n\r\n   // se guarda el pedido en la DB\r\n   const realizarPedido = async e => {\r\n      e.preventDefault();\r\n\r\n      // extraemos el ID de la url con props.match.params\r\n      const { id } = props.match.params;\r\n\r\n      // construir el objeto en base a la especificaión de la API\r\n      const pedido = {\r\n         \"cliente\": id ,\r\n         \"pedido\": productos,\r\n         \"total\": total\r\n      }\r\n      // console.log(pedido);\r\n\r\n      // almacenarlo en la DB\r\n      const resultado = await clienteAxios.post(`/pedidos`, pedido)\r\n      \r\n      // leer la respuesta\r\n      if(resultado.status === 200) {\r\n         // alerta de todo bien\r\n         Swal.fire({\r\n            type: 'success',\r\n            title: 'Se Guardo Correctamente',\r\n            text: resultado.data.mensaje\r\n         })\r\n      } else {\r\n         // alerta error\r\n         Swal.fire({\r\n            type: 'error',\r\n            title: 'Hubo un Error',\r\n            text: 'Vuelva a intentarlo'\r\n         });\r\n      }\r\n\r\n      // redireccionar\r\n      props.history.push('/pedidos');\r\n   }\r\n   \r\n   return (\r\n\t\t<Fragment>\r\n         <h2>Nuevo Pedido</h2>\r\n\r\n         <div className=\"ficha-cliente\">\r\n            <h3>Nombre del Cliente:</h3>\r\n            <p>Nombre: {cliente.nombre} {cliente.apellido}</p>\r\n            <p>Correo: {cliente.email}</p>\r\n         </div>\r\n         \r\n         <FormBuscarProducto \r\n            buscarProducto={buscarProducto}\r\n            leerDatosBusqueda={leerDatosBusqueda}            \r\n         />\r\n         \r\n\r\n         <ul className=\"resumen\">\r\n\r\n            {productos.map((producto, index) => (\r\n               <FormCantidadProducto \r\n                  key={producto.producto}\r\n                  producto={producto}\r\n                  restarProductos={restarProductos}\r\n                  aumentarProductos={aumentarProductos}\r\n                  index={index}\r\n                  eliminarProductoPedido={eliminarProductoPedido}\r\n               />\r\n            ))}\r\n             \r\n         </ul>\r\n\r\n         <p className=\"total\">Total a Pagar: <span>$ {total}</span> </p>\r\n\r\n         { total > 0 ? (\r\n            <form \r\n               onSubmit={realizarPedido}               \r\n            >\r\n            \r\n            <input   type=\"submit\" \r\n                     className=\"btn btn-verde btn-block\"\r\n                     value=\"Realizar Pedido\" />\r\n            </form>\r\n         ) : null }\r\n      </Fragment>\r\n\t)\r\n}\r\n\r\nexport default withRouter(NuevoPedido);","C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\EditarCliente.js",["116","117","118"],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\FormBuscarProducto.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\FormCantidadProducto.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\DetallesPedido.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\auth\\Login.js",["119"],"import React, {useState, useContext} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport {withRouter} from 'react-router-dom';\r\nimport clienteAxios from '../../config/axios';\r\n\r\n// Context\r\nimport { CRMContext } from '../../context/CRMContext';\r\n\r\nfunction Login(props) {\r\n\r\n   // Auth y token\r\n   const [auth, guardarAuth] = useContext(CRMContext);\r\n   // console.log(auth);\r\n\r\n\r\n   /******************** USESTATE *******************/\r\n\tconst [credenciales, guardarCredenciales] = useState({});\r\n\r\n   /******************** METODOS *******************/\r\n\r\n   // Enviamos los datos para iniciar sesion\r\n   const iniciarSesion = async e => {\r\n      e.preventDefault();\r\n\r\n      // Autenticar usurio\r\n      try {\r\n\r\n         const respuesta = await clienteAxios.post('/iniciar-sesion', credenciales);\r\n         // esta solo se muestra cuando es correcto - console.log(respuesta);\r\n\r\n         // extraer el token y colocarlo en el localstorage\r\n         const {token} = respuesta.data;\r\n         localStorage.setItem('token', token);\r\n\r\n         // colocarlo en el state globla context\r\n         guardarAuth({\r\n            token: token,\r\n            auth: true\r\n         });\r\n\r\n         // lanzaos una alerta \r\n         Swal.fire(\r\n            'Login Correcto',\r\n            'Has Iniciado Sesión',\r\n            'success'\r\n         )\r\n\r\n         // redireccionar\r\n         props.history.push('/');\r\n\r\n         \r\n      } catch (error) {\r\n         console.log(error);\r\n         Swal.fire({\r\n            type: 'error',\r\n            title: 'Hubo un error',\r\n            text: error.response.data.mensaje\r\n         })\r\n      }\r\n   }\r\n\t\r\n   // Almacenamos lo que se teclea en los inputs en el state\r\n   const leerDatos = e => {\r\n      guardarCredenciales({\r\n         ...credenciales,\r\n         [e.target.name]: e.target.value\r\n      })\r\n   }\r\n\r\n   return(\r\n      <div className='login'>\r\n         <h2>Iniciar Sesión</h2>\r\n\r\n         <div className=\"contenedor-formulario\">\r\n            <form\r\n               onSubmit={iniciarSesion}\r\n            >\r\n               <div className=\"campo\">\r\n                  <label>Email</label>\r\n                  <input type=\"text\" \r\n                         name=\"email\"\r\n                         placeholder=\"Email para Iniciar Sesión\"\r\n                         required\r\n                         onChange={leerDatos}\r\n                  />\r\n               </div>\r\n\r\n               <div className=\"campo\">\r\n                  <label>Password</label>\r\n                  <input type=\"password\" \r\n                         name=\"password\"\r\n                         placeholder=\"Password para Iniciar Sesión\"\r\n                         required\r\n                         onChange={leerDatos}\r\n                  />\r\n               </div>\r\n\r\n               <input type=\"submit\"\r\n                      value=\"Iniciar Sesión\"\r\n                      className=\"btn btn-verde btn-block\"\r\n               />\r\n\r\n            </form>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default withRouter(Login);","C:\\pnodejs\\restapi-frontend-react\\src\\context\\CRMContext.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":9,"column":15,"nodeType":"126","messageId":"127","endLine":9,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":22,"column":15,"nodeType":"126","messageId":"127","endLine":22,"endColumn":26},{"ruleId":"128","severity":1,"message":"129","line":50,"column":9,"nodeType":"130","messageId":"131","endLine":50,"endColumn":36},{"ruleId":"132","severity":1,"message":"133","line":64,"column":5,"nodeType":"134","endLine":64,"endColumn":15,"suggestions":"135"},{"ruleId":"124","severity":1,"message":"125","line":20,"column":15,"nodeType":"126","messageId":"127","endLine":20,"endColumn":26},{"ruleId":"128","severity":1,"message":"129","line":43,"column":9,"nodeType":"130","messageId":"131","endLine":43,"endColumn":36},{"ruleId":"132","severity":1,"message":"133","line":57,"column":5,"nodeType":"134","endLine":57,"endColumn":16,"suggestions":"136"},{"ruleId":"124","severity":1,"message":"125","line":15,"column":15,"nodeType":"126","messageId":"127","endLine":15,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":41,"column":5,"nodeType":"134","endLine":41,"endColumn":7,"suggestions":"137"},{"ruleId":"124","severity":1,"message":"125","line":11,"column":15,"nodeType":"126","messageId":"127","endLine":11,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":20,"column":15,"nodeType":"126","messageId":"127","endLine":20,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":11,"column":15,"nodeType":"126","messageId":"127","endLine":11,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":24,"column":15,"nodeType":"126","messageId":"127","endLine":24,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":28,"column":15,"nodeType":"126","messageId":"127","endLine":28,"endColumn":26},{"ruleId":"132","severity":1,"message":"138","line":53,"column":5,"nodeType":"134","endLine":53,"endColumn":7,"suggestions":"139"},{"ruleId":"124","severity":1,"message":"125","line":30,"column":15,"nodeType":"126","messageId":"127","endLine":30,"endColumn":26},{"ruleId":"132","severity":1,"message":"140","line":62,"column":7,"nodeType":"134","endLine":62,"endColumn":18,"suggestions":"141"},{"ruleId":"124","severity":1,"message":"125","line":24,"column":15,"nodeType":"126","messageId":"127","endLine":24,"endColumn":26},{"ruleId":"128","severity":1,"message":"129","line":46,"column":9,"nodeType":"130","messageId":"131","endLine":46,"endColumn":36},{"ruleId":"132","severity":1,"message":"138","line":58,"column":6,"nodeType":"134","endLine":58,"endColumn":8,"suggestions":"142"},{"ruleId":"124","severity":1,"message":"143","line":12,"column":11,"nodeType":"126","messageId":"127","endLine":12,"endColumn":15},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'guardarAuth' is assigned a value but never used.","Identifier","unusedVar","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth.token' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["146"],["147"],["148"],"React Hook useEffect has missing dependencies: 'auth.token', 'id', and 'props.history'. Either include them or remove the dependency array.",["149"],"React Hook useEffect has missing dependencies: 'actualizarTotal', 'auth.token', 'id', and 'props.history'. Either include them or remove the dependency array.",["150"],["151"],"'auth' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"158","fix":"162"},"Update the dependencies array to be: [auth.token, clientes, props.history]",{"range":"163","text":"164"},"Update the dependencies array to be: [auth.token, productos, props.history]",{"range":"165","text":"166"},"Update the dependencies array to be: [auth.token, props.history]",{"range":"167","text":"168"},"Update the dependencies array to be: [auth.token, id, props.history]",{"range":"169","text":"170"},"Update the dependencies array to be: [actualizarTotal, auth.token, id, productos, props.history]",{"range":"171","text":"172"},{"range":"173","text":"170"},[1723,1733],"[auth.token, clientes, props.history]",[1545,1556],"[auth.token, productos, props.history]",[1067,1069],"[auth.token, props.history]",[1489,1491],"[auth.token, id, props.history]",[1920,1931],"[actualizarTotal, auth.token, id, productos, props.history]",[1502,1504]]