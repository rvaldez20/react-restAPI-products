[{"C:\\pnodejs\\restapi-frontend-react\\src\\index.js":"1","C:\\pnodejs\\restapi-frontend-react\\src\\App.js":"2","C:\\pnodejs\\restapi-frontend-react\\src\\reportWebVitals.js":"3","C:\\pnodejs\\restapi-frontend-react\\src\\components\\layout\\Header.js":"4","C:\\pnodejs\\restapi-frontend-react\\src\\components\\layout\\Navegacion.js":"5","C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\Clientes.js":"6","C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\Productos.js":"7","C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\Pedidos.js":"8","C:\\pnodejs\\restapi-frontend-react\\src\\config\\axios.js":"9","C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\Cliente.js":"10","C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\NuevoCliente.js":"11","C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\Producto.js":"12","C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\NuevoProducto.js":"13","C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\EditarProducto.js":"14","C:\\pnodejs\\restapi-frontend-react\\src\\components\\layout\\Spinner.js":"15","C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\NuevoPedido.js":"16","C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\EditarCliente.js":"17","C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\FormBuscarProducto.js":"18","C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\FormCantidadProducto.js":"19","C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\DetallesPedido.js":"20"},{"size":503,"mtime":1609222581438,"results":"21","hashOfConfig":"22"},{"size":1657,"mtime":1612903207916,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":231,"mtime":1609225164758,"results":"25","hashOfConfig":"22"},{"size":523,"mtime":1612405823261,"results":"26","hashOfConfig":"22"},{"size":1618,"mtime":1612562700647,"results":"27","hashOfConfig":"22"},{"size":1409,"mtime":1612562063066,"results":"28","hashOfConfig":"22"},{"size":933,"mtime":1613017926266,"results":"29","hashOfConfig":"22"},{"size":137,"mtime":1609280857841,"results":"30","hashOfConfig":"22"},{"size":1914,"mtime":1612903329538,"results":"31","hashOfConfig":"22"},{"size":3268,"mtime":1612490392629,"results":"32","hashOfConfig":"22"},{"size":1686,"mtime":1612640928674,"results":"33","hashOfConfig":"22"},{"size":3123,"mtime":1612639649954,"results":"34","hashOfConfig":"22"},{"size":3961,"mtime":1612992350217,"results":"35","hashOfConfig":"22"},{"size":248,"mtime":1612561875491,"results":"36","hashOfConfig":"22"},{"size":7001,"mtime":1612994143175,"results":"37","hashOfConfig":"22"},{"size":4057,"mtime":1612501105739,"results":"38","hashOfConfig":"22"},{"size":750,"mtime":1612908989920,"results":"39","hashOfConfig":"22"},{"size":1238,"mtime":1612991242030,"results":"40","hashOfConfig":"22"},{"size":1257,"mtime":1613018087472,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"ot1ouy",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\pnodejs\\restapi-frontend-react\\src\\index.js",[],["87","88"],"C:\\pnodejs\\restapi-frontend-react\\src\\App.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\reportWebVitals.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\layout\\Header.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\layout\\Navegacion.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\Clientes.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\Productos.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\Pedidos.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\config\\axios.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\Cliente.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\NuevoCliente.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\Producto.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\NuevoProducto.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\productos\\EditarProducto.js",["89"],"import React, {Fragment, useState, useEffect} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport clienteAxios from '../../config/axios';\r\nimport Spinner from '../layout/Spinner';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\n\r\nfunction EditarProductos(props) {\r\n\r\n\t// Obtener el ID del producto usando los props (props.match.params)\r\n\tconst {id} = props.match.params;\r\n\t// console.log(id);\r\n\r\n\t/******************** STATES *******************/\r\n\t// producto=state | guardarProducto=setState\r\n\tconst [producto, guardarProducto] = useState({\r\n\t\tnombre: '',\r\n\t\tprecio: '',\r\n\t\timagen: ''\r\n\t});\r\n\r\n\t// otro state: archivo=state | guardaraArchivo=setState\r\n\tconst [archivo, guardarArchivo] = useState('');\r\n\r\n\r\n\t/******************** USEEFECTT *******************/\r\n\tuseEffect( () => {\r\n\t\t// consulta a la API para obtener el producto a editar\r\n\t\tconst consultarAPI = async () => {\r\n\t\t\tconst productoConsulta = await clienteAxios.get(`/productos/${id}`)\r\n\t\t\t// console.log(productoConsulta.data);\r\n\t\t\tguardarProducto(productoConsulta.data);\r\n\t\t}\r\n\r\n\t\t// ejecutamos la consulta a la API\r\n\t\tconsultarAPI();\r\n\t}, []);\r\n\r\n\r\n\t/******************** METODOS *******************/\r\n\t// leer los datos del formulario\r\n\tconst leerInformacionProducto = e => {\r\n\t\tguardarProducto({\r\n\t\t\t// obtener una copia del state actual y agregar de nuevo\r\n\t\t\t...producto,\r\n\t\t\t[e.target.name] : e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\t// Coloca la imagen en el state\r\n\tconst leerArchivo = e => {\r\n\t\t// para testear e.target.files - se selecciona el elemento [0] ya que es una imagen\r\n\t\t// console.log(e.target.files[0]);\r\n\r\n\t\tguardarArchivo(e.target.files[0]);\r\n\t}\r\n\r\n\t// edita un product en la DB\r\n\tconst editarProducto = async e => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\t// crear un formulario formdata\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('nombre', producto.nombre);\r\n\t\tformData.append('precio', producto.precio);\r\n\t\tformData.append('imagen', archivo);\r\n\r\n\t\t// almacenarlo en la DB\r\n\t\ttry {\r\n\t\t\tconst res = await clienteAxios.put(`/productos/${id}`, formData, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// para test de las respuesta (res)\r\n\t\t\t// console.log(res);\r\n\r\n\t\t\t// lanzar exito\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tSwal.fire(\t\t\t\t\r\n\t\t\t\t\t'Guardado!',\r\n\t\t\t\t\t'El Producto se actualizo Correctamente',\r\n\t\t\t\t\t'success'\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// redireccionamos al listado de productos\r\n\t\t\tprops.history.push('/productos');\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\r\n\t\t\t// lanzar alerta de error\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttype: 'error',\r\n\t\t\t\ttitle: 'Hubo un Error',\r\n\t\t\t\ttext: 'Vuelva a intentarlo'\r\n\t\t\t});\r\n\t\t}\t\t\r\n\r\n\t}\r\n\r\n\t// Extraer los valores del State\r\n\tconst { nombre, imagen, precio } = producto;\r\n\r\n\tif(!nombre) return <Spinner />\r\n\r\n   return (\r\n\t\t<Fragment>\r\n\t\t\t<h2>Editar Producto</h2>\r\n\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={editarProducto}\r\n\t\t\t>\r\n\t\t\t\t<legend>Llena todos los campos</legend>\r\n\r\n\t\t\t\t<div className=\"campo\">\r\n\t\t\t\t\t<label>Nombre:</label>\r\n\t\t\t\t\t<input \ttype=\"text\" \r\n\t\t\t\t\t\t\t\tplaceholder=\"Nombre Producto\" \r\n\t\t\t\t\t\t\t\tname=\"nombre\" \r\n\t\t\t\t\t\t\t\tonChange={leerInformacionProducto}\r\n\t\t\t\t\t\t\t\tdefaultValue={nombre}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"campo\">\r\n\t\t\t\t\t<label>Precio:</label>\r\n\t\t\t\t\t<input \ttype=\"number\" \r\n\t\t\t\t\t\t\t\tname=\"precio\" \r\n\t\t\t\t\t\t\t\tmin=\"0.00\" \r\n\t\t\t\t\t\t\t\tstep=\"0.01\" \r\n\t\t\t\t\t\t\t\tplaceholder=\"Precio\"\r\n\t\t\t\t\t\t\t\tonChange={leerInformacionProducto}\r\n\t\t\t\t\t\t\t\tdefaultValue={precio}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"campo\">\r\n\t\t\t\t\t<label>Imagen:</label>\r\n\t\t\t\t\t{imagen ? (\r\n\t\t\t\t\t\t<img width=\"200px\" alt={`img_${nombre}`} src={`http://localhost:5000/${imagen}`} />\r\n\t\t\t\t\t) : null }\r\n\t\t\t\t\t<input \ttype=\"file\"  \r\n\t\t\t\t\t\t\t\tname=\"imagen\"\r\n\t\t\t\t\t\t\t\tonChange={leerArchivo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"enviar\">\r\n\t\t\t\t\t\t<input \ttype=\"submit\" \r\n\t\t\t\t\t\t\t\t\tclass=\"btn btn-azul\" \r\n\t\t\t\t\t\t\t\t\tvalue=\"Guardar Cambios\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nexport default withRouter(EditarProductos);","C:\\pnodejs\\restapi-frontend-react\\src\\components\\layout\\Spinner.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\NuevoPedido.js",["90"],"import React, {Fragment, useState, useEffect} from 'react';\r\nimport clienteAxios from '../../config/axios';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport FormBuscarProducto from './FormBuscarProducto';\r\nimport FormCantidadProducto from './FormCantidadProducto';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction NuevoPedido(props){\r\n   // extraer el ID del cliente\r\n   const {id} = props.match.params;\r\n\r\n   /******************** USESTATE *******************/\r\n   // cliente = state | guardarCliente =stateEffect\r\n   const [cliente, guardarCliente] = useState({});\r\n\r\n   // busqueda = state | guardarBusqueda=stateEffect\r\n   const [busqueda, guardarBusqueda] = useState('');\r\n\r\n   // productos = state | guardarproductos = stateEffect\r\n   const [productos, guardarProductos] = useState([]);\r\n\r\n   // total = state | guardarTotal= stateeffect\r\n   const [total, guardarTotal] = useState(0);\r\n\r\n\r\n   /******************** USEEFFECT *******************/\r\n\r\n   useEffect( () => {\r\n      // obtenemos el cliente\r\n      const consultarAPI = async () => {\r\n         // consultar cliente actual\r\n         const resultado = await clienteAxios.get(`/clientes/${id}`);\r\n         // Tests\r\n         // console.log(resultado.data);         \r\n         // Se guarda el cliente en el state\r\n         guardarCliente(resultado.data);\r\n      }\r\n\r\n      // ejecutamos la consulta\r\n      consultarAPI();\r\n\r\n      // actualizar el total a pagar\r\n      actualizarTotal();\r\n\r\n   }, [productos]);\r\n\r\n\r\n   /******************** METODOS *******************/\r\n\r\n   const buscarProducto = async e => {\r\n      e.preventDefault();\r\n      \r\n      // obtener los productos e la busqueda\r\n      const resultadoBusqueda = await clienteAxios.post(`/productos/busqueda/${busqueda}`);\r\n      // para testear\r\n      //console.log(resultadoBusqueda);\r\n\r\n      // Validamos si obtuvimos un producto, si es asi lo agregamos al state\r\n      if(resultadoBusqueda.data[0]) {\r\n         // si hay un producto\r\n         let productoResultado = resultadoBusqueda.data[0];\r\n         // console.log(productoResultado);\r\n         //agregar la llave \"producto\" (copia id)\r\n         productoResultado.producto = resultadoBusqueda.data[0]._id;\r\n         productoResultado.cantidad = 0;\r\n\r\n         // guardamos el producto en el state (sacamos una copia del state actual)\r\n         guardarProductos([...productos, productoResultado]);         \r\n      } else {\r\n         // si no hay producto\r\n         Swal.fire({\r\n            type: 'error',\r\n            title: 'No Resultados',\r\n            text: 'No hay resultados'\r\n         });\r\n      }\r\n   }\r\n\r\n   // almacenar lo que tecleamos para busqueda en el state\r\n   const leerDatosBusqueda = e => {\r\n      guardarBusqueda( e.target.value );\r\n   }\r\n\r\n   // actualiza la cantidad de productos\r\n   // Disminuye en uno la cantidad\r\n   const restarProductos = i => {\r\n      // console.log('Uno Menos...',i);\r\n\r\n      // copiar el arreglo original del producto\r\n      const todosProductos = [...productos];\r\n\r\n      // validamos: si esta en cero no s epuede restar\r\n      if(todosProductos[i].cantidad === 0) return;\r\n\r\n      // si es mayor d ecero hace,os el decremento\r\n      todosProductos[i].cantidad--;\r\n      \r\n      // Y lo almacenamos en el state\r\n      guardarProductos(todosProductos);\r\n   }\r\n\r\n   // Aumenta en uno la cantidad\r\n   const aumentarProductos = i => {\r\n      // console.log('Uno mas...',i)\r\n\r\n      // copia al arreglo original de productos\r\n      const todosProductos = [...productos];\r\n\r\n      // incrementamos uno\r\n      todosProductos[i].cantidad++;\r\n\r\n      // Guardamos la cantidad en el state\r\n      guardarProductos(todosProductos);\r\n   }\r\n\r\n   // eliminar un producto del state\r\n   const eliminarProductoPedido = id => {\r\n      // console.log(id)      \r\n\r\n      // eliminamos el producto en base al ID\r\n      const todosProductos = productos.filter(producto => producto.producto !== id );\r\n\r\n      // lo guardamos en el state\r\n      guardarProductos(todosProductos);\r\n   }\r\n\r\n\r\n   // actualizar el total a pagar\r\n   const actualizarTotal = () => {\r\n      // si el arreglo de productos es igual a cero el total es cero\r\n      if (productos.length === 0) {\r\n         guardarTotal(0);\r\n         return;\r\n      } \r\n\r\n      // calculamos el nuevo total\r\n      let nuevoTotal = 0;\r\n      \r\n      \r\n      // recorrer todos los productos, sus cantidades y precios\r\n      productos.map( producto => nuevoTotal += (producto.cantidad * producto.precio) );\r\n\r\n      // almacenar el total en el state\r\n      guardarTotal(nuevoTotal);\r\n   }\r\n\r\n   // se guarda el pedido en la DB\r\n   const realizarPedido = async e => {\r\n      e.preventDefault();\r\n\r\n      // extraemos el ID de la url con props.match.params\r\n      const { id } = props.match.params;\r\n\r\n      // construir el objeto en base a la especificaión de la API\r\n      const pedido = {\r\n         \"cliente\": id ,\r\n         \"pedido\": productos,\r\n         \"total\": total\r\n      }\r\n      // console.log(pedido);\r\n\r\n      // almacenarlo en la DB\r\n      const resultado = await clienteAxios.post(`/pedidos`, pedido)\r\n      \r\n      // leer la respuesta\r\n      if(resultado.status === 200) {\r\n         // alerta de todo bien\r\n         Swal.fire({\r\n            type: 'success',\r\n            title: 'Se Guardo Correctamente',\r\n            text: resultado.data.mensaje\r\n         })\r\n      } else {\r\n         // alerta error\r\n         Swal.fire({\r\n            type: 'error',\r\n            title: 'Hubo un Error',\r\n            text: 'Vuelva a intentarlo'\r\n         });\r\n      }\r\n\r\n      // redireccionar\r\n      props.history.push('/pedidos');\r\n   }\r\n   \r\n   return (\r\n\t\t<Fragment>\r\n         <h2>Nuevo Pedido</h2>\r\n\r\n         <div className=\"ficha-cliente\">\r\n            <h3>Nombre del Cliente:</h3>\r\n            <p>Nombre: {cliente.nombre} {cliente.apellido}</p>\r\n            <p>Correo: {cliente.email}</p>\r\n         </div>\r\n         \r\n         <FormBuscarProducto \r\n            buscarProducto={buscarProducto}\r\n            leerDatosBusqueda={leerDatosBusqueda}            \r\n         />\r\n         \r\n\r\n         <ul className=\"resumen\">\r\n\r\n            {productos.map((producto, index) => (\r\n               <FormCantidadProducto \r\n                  key={producto.producto}\r\n                  producto={producto}\r\n                  restarProductos={restarProductos}\r\n                  aumentarProductos={aumentarProductos}\r\n                  index={index}\r\n                  eliminarProductoPedido={eliminarProductoPedido}\r\n               />\r\n            ))}\r\n             \r\n         </ul>\r\n\r\n         <p className=\"total\">Total a Pagar: <span>$ {total}</span> </p>\r\n\r\n         { total > 0 ? (\r\n            <form \r\n               onSubmit={realizarPedido}               \r\n            >\r\n            \r\n            <input   type=\"submit\" \r\n                     className=\"btn btn-verde btn-block\"\r\n                     value=\"Realizar Pedido\" />\r\n            </form>\r\n         ) : null }\r\n      </Fragment>\r\n\t)\r\n}\r\n\r\nexport default withRouter(NuevoPedido);","C:\\pnodejs\\restapi-frontend-react\\src\\components\\clientes\\EditarCliente.js",["91"],"import React, {Fragment, useState, useEffect} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nfunction EditarCliente(props) {\r\n\r\n   // obtenemos el id props->match->parmas->id\r\n   const { id } = props.match.params;\r\n  \r\n\t// inicializamos el state- cliente=state | guardarCliente=funcion para modificar el state\r\n\tconst [cliente, datosCliente] = useState({\r\n\t\tnombre: '',\r\n\t\tapellido: '',\r\n\t\tempresa: '',\r\n\t\temail: ''\r\n\t});\r\n\r\n   // Query a la API\r\n   const consultarAPI = async () => {\r\n      const clienteConsulta = await clienteAxios.get(`/clientes/${id}`);\r\n\r\n      // para testear\r\n      // console.log(clienteConsulta.data);\r\n\r\n      // lo guardamos en el state\r\n      datosCliente(clienteConsulta.data);\r\n   }\r\n\r\n\r\n   // definimos useEffect cuando el componente carga\r\n   useEffect( () => {\r\n      consultarAPI();\r\n   },[]);\r\n\r\n\r\n\t// funcion para leer los datos del formulario\r\n\tconst actualizarState = e => {\r\n\t\t// almacenamos lo que el usuuario escribe en el state\r\n\t\tdatosCliente({\r\n\t\t\t// obtenemos una copia del state actual\r\n\t\t\t...cliente, \r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t});\r\n\t\t// console.log( [e.target.name] + \":\" + e.target.value);\r\n\t\t// console.log(cliente);\r\n\t}\r\n\r\n   // Envia una petición por axios para cactualizar el cliente\r\n   const actualizarCliente = e => {\r\n      // Hacemos el prevendefault\r\n      e.preventDefault();\r\n\r\n      // peticion por axios\r\n      clienteAxios.put(`/clientes/${cliente._id}`, cliente)\r\n         .then(res => {\r\n            if(res.data.code === 11000) {\r\n\t\t\t\t\t// existe un error de mongo\r\n\t\t\t\t\t// console.log('Error de duplicado de Mongo')\r\n\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\ttitle: 'Hubo un Error',\r\n\t\t\t\t\t\ttext: 'Ese cliente ya esta registrado',\r\n\t\t\t\t\t\ticon: 'error'\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// No existen errores\r\n\t\t\t\t\t// console.log(res.data);\r\n\t\t\t\t\tSwal.fire(\r\n\t\t\t\t\t\t'Guardado',\r\n\t\t\t\t\t\t'Se Actualizo Correctamente',\r\n\t\t\t\t\t\t'success'\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n            // redireccionar\r\n            props.history.push('/');\r\n         })\r\n\r\n\r\n   }\r\n\r\n\r\n\t// validar el formulario\r\n\tconst validarCliente = () => {\r\n\t\t// destroctring al state\r\n\t\tconst {nombre, apellido, email, empresa} = cliente;\r\n\r\n\t\t// revisamos que los campos te gan contenido\r\n\t\tlet valido = !nombre.length || !apellido.length || !email.length || !empresa;\r\n\r\n\t\t// return true or false\r\n\t\treturn valido;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h2>Editar Cliente</h2>\r\n\r\n\t\t\t<form\r\n            onSubmit={actualizarCliente}\r\n         >\r\n\t\t\t\t<legend>Llena todos los campos</legend>\r\n\r\n\t\t\t\t<div className=\"campo\">\r\n\t\t\t\t\t<label>Nombre:</label>\r\n\t\t\t\t\t<input  \ttype=\"text\" \r\n\t\t\t\t\t\t\t  \tplaceholder=\"Nombre Cliente\" \r\n\t\t\t\t\t\t\t\tname=\"nombre\"                         \r\n\t\t\t\t\t\t\t\tonChange={actualizarState}\r\n                        value={cliente.nombre}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"campo\">\r\n\t\t\t\t\t<label>Apellido:</label>\r\n\t\t\t\t\t<input \ttype=\"text\" \r\n\t\t\t\t\t\t\t\tplaceholder=\"Apellido Cliente\" \r\n\t\t\t\t\t\t\t\tname=\"apellido\"\r\n\t\t\t\t\t\t\t\tonChange={actualizarState}\r\n                        value={cliente.apellido}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\r\n\t\t\t\t<div className=\"campo\">\r\n\t\t\t\t\t<label>Empresa:</label>\r\n\t\t\t\t\t<input \ttype=\"text\" \r\n\t\t\t\t\t\t\t\tplaceholder=\"Empresa Cliente\" \r\n\t\t\t\t\t\t\t\tname=\"empresa\"\r\n\t\t\t\t\t\t\t\tonChange={actualizarState}\r\n                        value={cliente.empresa}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"campo\">\r\n\t\t\t\t\t<label>Email:</label>\r\n\t\t\t\t\t<input \ttype=\"email\" \r\n\t\t\t\t\t\t\t\tplaceholder=\"Email Cliente\" \r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\tonChange={actualizarState}\r\n                        value={cliente.email}\r\n                        // readOnly\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\t\t\t\t\r\n\r\n\t\t\t\t<div className=\"enviar\">\r\n\t\t\t\t\t<input \ttype=\"submit\" \r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-azul\" \r\n\t\t\t\t\t\t\t\tvalue=\"Guardar Cambios\" \r\n\t\t\t\t\t\t\t\tdisabled={ validarCliente() }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t\t\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\n// HighOrdenComponet (HOC) es una function que toma un componente y retorna un nuevo componente\r\nexport default withRouter(EditarCliente);","C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\FormBuscarProducto.js",[],"C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\FormCantidadProducto.js",["92"],"import React, {Fragment} from 'react';\r\n\r\nfunction FormCantidadProducto(props) {\r\n\r\n   const {producto, restarProductos, aumentarProductos, index, eliminarProductoPedido} = props;\r\n\r\n   return(     \r\n      <li>\r\n         <div className=\"texto-producto\">\r\n            <p className=\"nombre\">{producto.nombre}</p>\r\n            <p className=\"precio\">$ {producto.precio}</p>\r\n         </div> \r\n         <div className=\"acciones\">\r\n            <div className=\"contenedor-cantidad\">\r\n               <i \r\n                  className=\"fas fa-minus\"\r\n                  onClick={() => restarProductos(index)}\r\n               >\r\n               </i>\r\n               <p>{producto.cantidad}</p>\r\n               <i \r\n                  className=\"fas fa-plus\"\r\n                  onClick={() => aumentarProductos(index)}\r\n               >\r\n               </i>\r\n            </div>\r\n            <button  type=\"button\" \r\n                     className=\"btn btn-rojo\"\r\n                     onClick={() => eliminarProductoPedido(producto.producto)}\r\n            >\r\n               <i className=\"fas fa-minus-circle\"></i>\r\n                     Eliminar Producto\r\n            </button>\r\n         </div>\r\n      </li>\r\n   )\r\n}\r\n\r\nexport default FormCantidadProducto;","C:\\pnodejs\\restapi-frontend-react\\src\\components\\pedidos\\DetallesPedido.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":38,"column":5,"nodeType":"99","endLine":38,"endColumn":7,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":46,"column":7,"nodeType":"99","endLine":46,"endColumn":18,"suggestions":"102"},{"ruleId":"97","severity":1,"message":"103","line":35,"column":6,"nodeType":"99","endLine":35,"endColumn":8,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":16,"nodeType":"107","messageId":"108","endLine":1,"endColumn":24},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has missing dependencies: 'actualizarTotal' and 'id'. Either include them or remove the dependency array.",["112"],"React Hook useEffect has a missing dependency: 'consultarAPI'. Either include it or remove the dependency array.",["113"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [id]",{"range":"120","text":"121"},"Update the dependencies array to be: [actualizarTotal, id, productos]",{"range":"122","text":"123"},"Update the dependencies array to be: [consultarAPI]",{"range":"124","text":"125"},[1113,1115],"[id]",[1462,1473],"[actualizarTotal, id, productos]",[924,926],"[consultarAPI]"]